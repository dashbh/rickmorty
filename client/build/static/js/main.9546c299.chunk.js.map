{"version":3,"sources":["utils/query.ts","components/RickMorty/index.styled.ts","components/Card/index.styled.ts","components/Card/index.tsx","components/Search/index.styled.ts","components/Search/index.tsx","components/Filters/index.styled.ts","components/Filters/index.tsx","components/RickMorty/index.tsx","App.styled.ts","PrivateRoute.tsx","components/Login/index.tsx","components/Register/index.tsx","utils/api.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["CharecterQuery","gql","FilterContainer","styled","aside","ContentContainer","main","CharecterList","div","CardContainer","CardHeader","CardImage","CardTitle","CardName","h2","CardDesc","p","CardBody","TextWrapper","Card","props","charecter","src","image","alt","name","id","moment","diff","created","status","species","gender","origin","location","SearchWrapper","Search","Sort","useState","searchText","setSearchText","htmlFor","type","onChange","event","target","value","className","onClick","onSearch","onSort","OptionWrapper","Option","options","label","key","text","Filters","onToggle","filters","state","onFilter","items","checked","push","filter","i","setState","filterObject","prop","join","filterOptions","this","Object","keys","map","index","option","data-testid","React","PureComponent","RickMorty","getCharecters","data","characters","sort","a","b","parseInt","handleSearch","search","query","handleSort","handleFilter","Fragment","variables","result","loading","error","Component","Title","h1","Main","PrivateRoute","component","rest","render","localStorage","getItem","to","pathname","from","Login","handleChange","e","handleSubmit","user","preventDefault","handleLogin","username","password","submitted","redirect","UserContext","Consumer","isAuth","onSubmit","required","Register","handleRegister","console","log","confPassword","API","login","axios","method","baseURL","timeout","response","setItem","JSON","stringify","message","register","client","ApolloClient","uri","createContext","initialState","reducer","action","auth","payload","token","UserContextProvider","useReducer","dispatch","Provider","then","handleLogout","removeItem","children","App","exact","path","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.9546c299.chunk.js","sourcesContent":["import gql from 'graphql-tag'\r\n\r\nconst CharecterQuery = gql`\r\nquery Character(\r\n  $species: String = \"\",\r\n  $gender: String = \"\",\r\n  $name: String = \"\") \r\n{\r\n  characters(species: $species,\r\n    gender: $gender,\r\n    name: $name)\r\n  {\r\n    id\r\n    name\r\n    status\r\n    species\r\n    gender\r\n    image,\r\n    location {\r\n      name\r\n    }\r\n    origin {\r\n      name\r\n    }\r\n  }\r\n}`;\r\n\r\nexport default CharecterQuery;","import styled from 'styled-components';\r\n\r\nexport const FilterContainer = styled.aside`\r\n    width: 100%;\r\n    margin: 0 20px 0 0;\r\n    @media (min-width: 768px) {\r\n        max-width: 25%;\r\n    }\r\n`;\r\n\r\nexport const ContentContainer = styled.main`\r\n    flex-grow: 1;\r\n    width: 70%;\r\n`;\r\n\r\nexport const CharecterList = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-evenly;\r\n    background: rgb(32, 35, 41);\r\n`;\r\n\r\nexport default {\r\n  FilterContainer,\r\n  ContentContainer,\r\n  CharecterList,\r\n};","import styled from 'styled-components';\r\n\r\nexport const CardContainer = styled.div`\r\n    width: 100%;\r\n    @media (min-width: 768px) {\r\n        width: 30%;\r\n    }\r\n    margin: 25px 0;\r\n    position: relative;\r\n    border-radius: 0.5rem;\r\n`;\r\n\r\nexport const CardHeader = styled.div`\r\n    position: relative;\r\n    overflow: hidden;\r\n`;\r\n\r\nexport const CardImage = styled.div`\r\n    width: 100%;\r\n    background: #202329;\r\n`;\r\n\r\nexport const CardTitle = styled.div`\r\n    width: 100%;\r\n    opacity: 0.8;\r\n    position: absolute;\r\n    bottom: 0px;\r\n    background: rgb(32, 35, 41);\r\n    padding: 0.625rem;\r\n`;\r\n\r\nexport const CardName = styled.h2`\r\n    font-weight: bold;\r\n    color: rgb(245, 245, 245);\r\n    margin: 0;\r\n`;\r\n\r\nexport const CardDesc = styled.p`\r\n    color: rgb(187, 187, 187);\r\n    margin: 0;\r\n`;\r\n\r\nexport const CardBody = styled.div`\r\n    color: rgb(255, 152, 0);\r\n    padding: 10px 1rem;\r\n    background: rgb(51, 51, 51);\r\n    height: 200px\r\n`;\r\n\r\nexport const TextWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin: 10px 0;\r\n\r\n    span {\r\n        font-size: 0.7rem;\r\n        color: #9e9e9e;\r\n    }\r\n    p {\r\n        width: 100%;\r\n        font-size: 0.9rem;\r\n        font-weight: 200;\r\n        text-align: right;\r\n        margin: 0;\r\n    }\r\n`;\r\n\r\nexport default {\r\n    CardImage,\r\n    CardTitle,\r\n    CardContainer,\r\n    CardName,\r\n    CardDesc,\r\n    CardBody,\r\n    TextWrapper,\r\n    CardHeader,\r\n};\r\n","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nimport * as Styled from './index.styled';\r\n\r\nexport interface ICharecter {\r\n    id?: number;\r\n    name?: string;\r\n    image?: string;\r\n    created?: Date;\r\n    status?: string;\r\n    species?: string;\r\n    gender?: string;\r\n    origin: INameUri;\r\n    location: INameUri;\r\n}\r\n\r\ninterface INameUri {\r\n    name: string;\r\n}\r\n\r\nexport interface IProps {\r\n    charecter: ICharecter;\r\n}\r\n\r\nconst Card = (props: IProps) => {\r\n  const { charecter } = props;\r\n  return (\r\n    <Styled.CardContainer>\r\n      <Styled.CardHeader>\r\n        <Styled.CardImage>\r\n          <img src={charecter.image} alt={charecter.name} />\r\n        </Styled.CardImage>\r\n        <Styled.CardTitle>\r\n          <Styled.CardName>{charecter.name}</Styled.CardName>\r\n          <Styled.CardDesc>\r\n            id:\r\n            {charecter.id}\r\n            {' '}\r\n            - created&nbsp;\r\n            {moment().diff(charecter.created, 'years')}\r\n            {' '}\r\n            years ago\r\n          </Styled.CardDesc>\r\n        </Styled.CardTitle>\r\n      </Styled.CardHeader>\r\n      <Styled.CardBody>\r\n        <Styled.TextWrapper>\r\n          <span>STATUS</span>\r\n          <p>{charecter.status}</p>\r\n        </Styled.TextWrapper>\r\n        <Styled.TextWrapper>\r\n          <span>SPECIES</span>\r\n          <p>{charecter.species}</p>\r\n        </Styled.TextWrapper>\r\n        <Styled.TextWrapper>\r\n          <span>GENDER</span>\r\n          <p>{charecter.gender}</p>\r\n        </Styled.TextWrapper>\r\n        <Styled.TextWrapper>\r\n          <span>ORIGIN</span>\r\n          <p>{charecter.origin.name}</p>\r\n        </Styled.TextWrapper>\r\n        <Styled.TextWrapper>\r\n          <span>LAST LOCATION</span>\r\n          <p>{charecter.location.name}</p>\r\n        </Styled.TextWrapper>\r\n      </Styled.CardBody>\r\n    </Styled.CardContainer>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import styled from 'styled-components';\r\n\r\nexport const SearchWrapper = styled.div`\r\n    display: flex;\r\n    margin: 5px 0;\r\n    justify-content: space-between\r\n`;\r\n\r\nexport const Search = styled.div`\r\n    display: block;\r\n`;\r\n\r\nexport const Sort = styled.div`\r\n    display: block;\r\n`;\r\n\r\nexport default {\r\n    SearchWrapper,\r\n    Search,\r\n    Sort\r\n};\r\n","import React, { useState } from 'react';\r\nimport * as Styled from './index.styled';\r\n\r\nconst Search = (props) => {\r\n  const [searchText, setSearchText] = useState('');\r\n\r\n  return (\r\n    <Styled.SearchWrapper>\r\n      <Styled.Search>\r\n        <label htmlFor=\"search\">Search By Name</label>&nbsp;\r\n        <input type=\"text\" name=\"search\" id=\"search\" onChange={(event) => setSearchText(event.target.value)} />\r\n        <button type=\"button\" className=\"button\" onClick={() => props.onSearch(searchText)}>Search</button>\r\n      </Styled.Search>\r\n\r\n      <Styled.Sort>\r\n        <label htmlFor=\"\">Sort By ID</label>&nbsp;\r\n        <select id=\"sort\" onChange={(event) => props.onSort(event.target.value)}>\r\n          <option value=\"ASC\">Ascending</option>\r\n          <option value=\"DSC\">Descending</option>\r\n        </select>\r\n      </Styled.Sort>\r\n    </Styled.SearchWrapper>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import styled from 'styled-components';\r\n\r\nexport const OptionWrapper = styled.div`\r\n    padding: 10px;\r\n    border: 1px solid #ccc;\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nexport const Option = styled.div`\r\n    padding: 5px 0;\r\n`;\r\n\r\nexport default {\r\n  OptionWrapper,\r\n  Option,\r\n};\r\n","import React from 'react';\r\nimport * as Styled from './index.styled';\r\n\r\nexport const gender = [\r\n  { key: 1, text: 'Female', value: 'Female' },\r\n  { key: 2, text: 'Male', value: 'Male' },\r\n  { key: 3, text: 'Genderless', value: 'Genderless' },\r\n  { key: 4, text: 'Unknown', value: 'unknown' }\r\n];\r\nexport const species = [\r\n  { key: 4, text: 'Human', value: 'Human' },\r\n  { key: 6, text: 'Alien', value: 'Alien' },\r\n  { key: 8, text: 'Unknown', value: 'unknown' }\r\n];\r\n\r\nconst options = {\r\n  species: {\r\n    label: 'Species',\r\n    options: species,\r\n  },\r\n  gender: {\r\n    label: 'Gender',\r\n    options: gender,\r\n  }\r\n};\r\n\r\ninterface IState {\r\n  filters: {};\r\n  filterOptions: {};\r\n}\r\n\r\ninterface IProps {\r\n  onFilter: (filters) => void\r\n}\r\n\r\nclass Filters extends React.PureComponent<IProps, IState> {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      filters: {},\r\n      filterOptions: options,\r\n    };\r\n  }\r\n\r\n  onToggle = (event, key) => {\r\n    const { filters } = this.state;\r\n    const { onFilter } = this.props;\r\n\r\n    const items = filters[key] ? filters[key] : [];\r\n    if (event.target.checked) {\r\n      items.push(event.target.value);\r\n      filters[key] = items;\r\n    } else {\r\n      filters[key] = items.filter((i) => i !== event.target.value);\r\n    }\r\n\r\n    this.setState({\r\n      filters: { ...filters },\r\n    });\r\n\r\n    const filterObject = {};\r\n\r\n    for (const prop in filters) {\r\n      filterObject[prop] = filters[prop].join(',');\r\n    }\r\n\r\n    onFilter(filterObject);\r\n  }\r\n\r\n  render() {\r\n    const { filterOptions } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <h2>Filters</h2>\r\n        {\r\n          Object.keys(filterOptions).map((index) => (\r\n            <Styled.OptionWrapper key={index}>\r\n              <h3>{filterOptions[index].label}</h3>\r\n              {\r\n                filterOptions[index].options.map((option) => (\r\n                  <Styled.Option key={`${index}_${option.key}`}>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id={`${index}_${option.key}`}\r\n                      data-testid={`${index}_${option.key}`}\r\n                      value={option.value}\r\n                      onChange={(event) => this.onToggle(event, index)}\r\n                    />\r\n                    <label htmlFor={`${index}_${option.key}`}>{option.text}</label>\r\n                  </Styled.Option>\r\n                ))\r\n              }\r\n            </Styled.OptionWrapper>\r\n          ))\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Filters;\r\n","import React from 'react';\r\nimport { Query } from 'react-apollo';\r\nimport CharecterQuery from '../../utils/query';\r\nimport * as Styled from './index.styled';\r\nimport Card, { ICharecter } from '../Card';\r\nimport Search from '../Search';\r\nimport Filters from '../Filters';\r\n\r\ninterface IState {\r\n    query: any;\r\n    sort: string;\r\n}\r\n\r\nclass RickMorty extends React.Component<{}, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            query: {\r\n                filter: {\r\n                    species: \"\",\r\n                    gender: \"\",\r\n                    name: \"\"\r\n                },\r\n            },\r\n            sort: \"\"\r\n        };\r\n    }\r\n\r\n\r\n\r\n    getCharecters = (data) => {\r\n        let {characters} = data;\r\n        if (characters) {\r\n            switch (this.state.sort) {\r\n                case \"ASC\":\r\n                    characters = characters.sort((a, b) => (parseInt(a.id) - parseInt(b.id)));\r\n                    break\r\n                case \"DSC\":\r\n                    characters = characters.sort((a, b) => (parseInt(b.id) - parseInt(a.id)));\r\n                    break\r\n                default:\r\n                    characters = characters.sort((a, b) => (parseInt(a.id) - parseInt(b.id)));\r\n            }\r\n        }\r\n        return characters;\r\n    }\r\n\r\n    handleSearch = (search) => {\r\n        const {filter} = this.state.query;\r\n        this.setState({ query: { filter: { ...filter, name: search } }});\r\n    }\r\n\r\n    handleSort = (sort) => {\r\n        this.setState({ sort })\r\n    }\r\n\r\n    handleFilter = (filter) => {\r\n        this.setState({ query: { filter } });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Styled.FilterContainer>\r\n                    <Filters onFilter={this.handleFilter} />\r\n                </Styled.FilterContainer>\r\n                <Styled.ContentContainer>\r\n                    <Search onSearch={this.handleSearch} onSort={this.handleSort} />\r\n                    <Query query={CharecterQuery}\r\n                        variables={{\r\n                            species: this.state.query.filter.species,\r\n                            gender: this.state.query.filter.gender,\r\n                            name: this.state.query.filter.name,\r\n                        }}>\r\n                        {result => {\r\n                            const { loading, error, data } = result;\r\n\r\n                            if (loading) {\r\n                                return <div>Loading...</div>;\r\n                            }\r\n                            if (error) {\r\n                                return <h1>ERROR !</h1>;\r\n                            }\r\n\r\n                            const characters = this.getCharecters(data);\r\n\r\n                            return (\r\n                                <Styled.CharecterList>\r\n                                    {\r\n                                        characters.map((charecter: ICharecter) => {\r\n                                            return <Card key={charecter.id} charecter={charecter} />\r\n                                        })\r\n                                    }\r\n                                </Styled.CharecterList>\r\n                            )\r\n                        }}\r\n\r\n                    </Query>\r\n                </Styled.ContentContainer>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RickMorty;","import styled from 'styled-components';\r\n\r\nexport const Title = styled.h1`\r\n    text-align: center;\r\n`;\r\n\r\nexport const Main = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    padding: 20px;\r\n`;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={props => (\r\n        localStorage.getItem('user')\r\n            ? <Component {...props} />\r\n            : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\r\n    )} />\r\n)\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { UserContext } from '../../App';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Login extends React.Component<any, any> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            submitted: false\r\n        };\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleSubmit = (e, user) => {\r\n        e.preventDefault();\r\n\r\n        user.handleLogin({\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { username, password, redirect } = this.state;\r\n        return (\r\n            <UserContext.Consumer>\r\n                {(user: any) => (<div className=\"container loginWrapper\">\r\n                    {user.isAuth ? (\r\n                        <Redirect to='/' />\r\n                    ) : (\r\n                            <React.Fragment>\r\n                                <h2>Login</h2>\r\n                                <form name=\"form\" onSubmit={(e) => this.handleSubmit(e, user)}>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Username</label>\r\n                                        <input required type=\"text\" name=\"username\" value={username} onChange={this.handleChange} />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Password</label>\r\n                                        <input required type=\"password\" name=\"password\" value={password} onChange={this.handleChange} />\r\n                                    </div>\r\n                                    <div className=\"form-action\">\r\n                                        <button type=\"submit\" className=\"button\">Login</button>\r\n                                        <Link to=\"/register\">Register</Link>\r\n                                    </div>\r\n                                </form>\r\n                                {user.isAuth && (<span>Authenticated</span>)}\r\n                            </React.Fragment>\r\n                        )\r\n                    }\r\n                </div>\r\n                )}\r\n            </UserContext.Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { UserContext } from '../../App';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Register extends React.Component<any, any> {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            confPassword: '',\r\n            submitted: false\r\n        };\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleSubmit = (e, user) => {\r\n        e.preventDefault();\r\n\r\n        user.handleRegister({\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        });\r\n\r\n        console.log('User Registred Successfully !!');\r\n    }\r\n\r\n    render() {\r\n        const { username, password, confPassword } = this.state;\r\n        return (\r\n            <UserContext.Consumer>\r\n                {user => (\r\n                    <div className=\"container loginWrapper\">\r\n                        <h2>Register</h2>\r\n                        <form name=\"form\" onSubmit={(e) => this.handleSubmit(e, user)}>\r\n                            <div className=\"form-group\">\r\n                                <label>Username</label>\r\n                                <input required type=\"text\" name=\"username\" value={username} onChange={this.handleChange} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Password</label>\r\n                                <input required type=\"password\" name=\"password\" value={password} onChange={this.handleChange} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Confirm</label>\r\n                                <input required type=\"password\" name=\"confPassword\" value={confPassword} onChange={this.handleChange} />\r\n                            </div>\r\n                            <div className=\"form-action\">\r\n                                <button type=\"submit\" className=\"button\">Register</button>\r\n                                <Link to=\"/login\">Login</Link>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                )}\r\n            </UserContext.Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;\r\n","import axios from 'axios';\r\n\r\nconst api = '/api';\r\n\r\nconst login = async (data: any) => {\r\n  try {\r\n    const response = await axios({\r\n      method: 'post',\r\n      baseURL: `${api}/user/login`,\r\n      timeout: 5000,\r\n      data: data\r\n    });\r\n\r\n    localStorage.setItem('user', JSON.stringify(response));\r\n\r\n    return response;\r\n  } catch (e) {\r\n    console.log(e.message);\r\n    return {\r\n      status: e.response.status,\r\n      error: e.response.data.error,\r\n    };\r\n  }\r\n};\r\n\r\nconst register = async (data: any) => {\r\n  try {\r\n    const response = await axios({\r\n      method: 'post',\r\n      baseURL: `${api}/user/signup`,\r\n      timeout: 5000,\r\n      data: data\r\n    });\r\n    return response;\r\n  } catch (e) {\r\n    console.log(e.message);\r\n    return {\r\n      status: e.response.status,\r\n      error: e.response.data.error,\r\n    };\r\n  }\r\n};\r\n\r\nconst API = { login, register };\r\nexport default API;","import React from 'react';\r\nimport RickMorty from './components/RickMorty';\r\nimport ApolloClient from 'apollo-boost';\r\nimport { ApolloProvider } from '@apollo/react-hooks';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\r\nimport {\r\n  Title, Main,\r\n} from './App.styled';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport API from './utils/api';\r\n\r\nconst client = new ApolloClient({\r\n  uri: '/api/graphql',\r\n});\r\n\r\nexport const UserContext = React.createContext({});\r\n\r\nconst initialState = {\r\n  user: {\r\n    isAuth: false\r\n  }\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'loginUser':\r\n      return {\r\n        ...state,\r\n        auth: action.payload.token,\r\n        name: action.payload.user,\r\n        isAuth: true\r\n      };\r\n    case 'logoutUser':\r\n      return {\r\n        ...state,\r\n        auth: '',\r\n        name: '',\r\n        isAuth: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst UserContextProvider = props => {\r\n  const [state, dispatch] = React.useReducer(reducer, initialState.user);\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        ...state,\r\n        handleLogin: (data) => API.login(data).then((response: any) => {\r\n          dispatch({\r\n            type: 'loginUser',\r\n            payload: {\r\n              auth: response.token,\r\n              user: response.user\r\n            }\r\n          });\r\n        }),\r\n        handleRegister: (data) => API.register(data),\r\n        handleLogout: () => {\r\n          localStorage.removeItem('user');\r\n          dispatch({\r\n            type: 'logoutUser'\r\n          });\r\n        }\r\n      }}\r\n    >\r\n      {props.children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <header>\r\n        <Title>Rick & Morty</Title>\r\n      </header>\r\n      <Main>\r\n        <UserContextProvider>\r\n          <Router>\r\n            <Switch>\r\n              <PrivateRoute exact path=\"/\" component={RickMorty} />\r\n              <Route path=\"/login\" component={Login} />\r\n              <Route path=\"/register\" component={Register} />\r\n              <Redirect from=\"*\" to=\"/\" />\r\n            </Switch>\r\n          </Router>\r\n        </UserContextProvider>\r\n      </Main>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}